//
// Mixins: utilities
// --------------------------------------------------

// Clearfix
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//		contenteditable attribute is included anywhere else in the document.
//		Otherwise it causes space to appear at the top and bottom of elements
//		that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//		`:before` to contain the top-margins of child elements.
@mixin clearfix() {
	*zoom: 1;
	&:before,
	&:after {
		content: ' '; // 1
		display: table; // 2
		// Fixes Opera/contenteditable bug:
		// http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
		line-height: 0;
	}
	&:after {
		clear: both;
	}
}


// Styling  -- 8< -- -- -- --

// Center-align a block level element
@mixin center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// center vertically
@mixin vertical-align() {
	position: relative;
	display: block;
	top: 50%;
	transform: translateY(-50%);
}


// Requires inline-block or block for proper styling

@mixin text-truncate() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}


// Retina images -- 8< -- -- -- --
// Retina background-image support with non-retina fall back

@mixin retina-image($file-1x, $file-2x, $width-1x, $height-1x) {
	background-image: url('$file-1x');

	@media
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (	 min--moz-device-pixel-ratio: 2),
	only screen and (		 -o-min-device-pixel-ratio: 2/1),
	only screen and (				min-device-pixel-ratio: 2),
	only screen and (								min-resolution: 192dpi),
	only screen and (								min-resolution: 2dppx) {
		background-image: url('$file-2x');
		background-size: $width-1x $height-1x;
	}
}

// Quick media queries -- 8< -- -- -- --

@mixin breakpoint($bp) {

	@if $bp == tablet {
		@media (min-width: #{$bp-tablet-min}) {
			@content;
		}
	} @elseif $bp == desktop {
		@media (min-width: #{$bp-desktop-min}) {
			@content;
		}
	} @elseif $bp == desktop-wide {
		@media (min-width: #{$bp-desktop-wide-min}) {
			@content;
		}
	}
}

@mixin breakpoint-limits {
	max-width: $body-max-width;
	min-width: $body-min-width - $margin-horizontal;
}

@mixin breakpoint-paddings {
	padding: $grid-padding;

	@include breakpoint(desktop) {
		padding: $grid-gutter;
	}
}
